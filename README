RNASeqReadSimulator
==================
Author: Wei Li (li.david.wei AT gmail.com)

Introduction
------------
RNASeqReadSimulator is a set of scripts generating simulated RNA-Seq reads. RNASeqReadSimulator provides users a simple tool to generate RNA-Seq reads for research purposes, and a framework to allow experienced users to expand functions. RNASeqReadSimulator offers the following features:

1. It allows users to randomly assign expression levels of transcripts and generate simulated single-end or paired-end RNA-Seq reads.

2. It is able to generate RNA-Seq reads that have a specified positional bias profile.

3. It is able to simulate random read errors from sequencing platforms.

4. The simulator consists of a few simple Python scripts. All scripts are command line driven, allowing users to invoke and design more functions.

Requirements
------------
RNASeqReadSimulator runs on both python 2.7 and python 3.0, and biopython package is required.

Demos
-----
The demo folder includes a few scripts and sample input files to generate RNA-Seq reads from a simple example.


Usage
-----

RNASeqReadSimulator includes the following scripts:

genexplvprofile.py is used to assign a random expression level of transcripts;
gensimreads.py simulates RNA-Seq reads in BED format;
getseqfrombed.py converts reads from BED format to FASTA format;
splitfasta.py splits paired-end reads in FASTA file into to separate files;
addvariation2splicingbed.py (optional) is a supplementary script to generate variations in splicing RNA-Seq reads; and
demo folder includes a set of scripts and files for a simple example to generate single-end or paired-end reads.


genexplvprofile.py
------------------

This file randomly assigns weights for each transcript, and gets the transcript statistics by a given transcript annotation file (BED File).

    Usage:   genexplvprofile.py {OPTIONS} <BED-File>

    OPTIONS

      -h 	  	Print this message

      -e mu,sigma	Specify the mean and variance of the lognormial distribution used to assign expression levels. Default -4,4

      -f   		Print the statistics only; do not assign expression levels.

    NOTE:

      To get a good group information, the BED file is suggested to sort according to the chromosome name and start position. In Unix systems, use "sort -k 1,1 -k 2,2n in.BED > out.BED" to get a sorted version (out.BED) of the bed file (in.BED).

      The weight is at the 8th column, if -f option is not specified. The expression level of each transcript (RPKM) can be calculated as column[8]*10^9/column[2]/sum(column[8]).


gensimreads.py
-------------
This script generates simulated RNA-Seq reads (in .bed format) from known gene annotations.

    Usage: gensimreads.py {OPTIONS} <BED-File>
        
    BED-File:      The gene annotation file (in BED format). Use '-' for STDIN input.

    OPTIONS

      -e [expression level file]    	Specify the weight of each transcript. Each line in the file should have at least (NFIELD+1)  fields, with field 0 the annotation id, and field NFIELD the weight of this annoation. If this file is not provided, uniform weight is applied.

      -n readcnt    	Specify the number of reads to be generated.

      -b [positional bias file]     	Specify the positional bias file. The file should include at least 100 lines, each contains only one integer number, showing the preference of the positional bias at this position. If no positional bias file is specified, use uniform distribution bias.

      -l [read length]      	Specify the read length.

      -o [output .bed file]     Specify the output file. The default is STDOUT

      -f [NFIELD]	The field of each line as weight input. Default is 7 (beginning from field 0).

      -p [PELENMEAN,PELENSTD]	 Generate paired-end reads with specified insert length mean and standard derivation. The default is 200,20.

    NOTE:

      The bed file is required to sort according to the chromosome name and position. In Unix systems, use "sort -k 1,1 -k 2,2n in.BED > out.BED" to get a sorted version (out.BED) of the bed file (in.BED).

      No problem to handle reads spanning multiple exons.


getseqfrombed.py
----------------
This script is used to extract sequences from bed file.

    Usage: getseqfrombed.py {OPTIONS} <input .bed file> <reference .fasta file>

    OPTIONS

      -b [error file]	Specify the positional error profile to be used. The file should include at least 100 lines, each containing a positive number. The number at line x is the weight that an error is occured at x% position of the read. If no positional error file specified, uniform weight is assumed.

      -r [error rate]	Specify the overall error rate, a number between 0 and 1. Default is 0 (no errors).

      -l [read length]	 Specify the read length. Default is 75.

      -f [seq] 	Fill at the end of each read by the sequence seq, if the read is shorter than the read length. This option is useful when simulating poly-A tails in RNA-Seq reads.

    NOTE:

      The input .bed file is best to sort according to chromosome names. Use - to input from STDIN.

      Biopython and numpy package are required.

      When applying models, we assume that all sequences are in the same length. The length information is given by the -l parameter. If the sequence length is greater than read length, nucleotides outside the read length will not be simulated for error.
